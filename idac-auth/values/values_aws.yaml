# Default values for idac-auth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

################################################################################
# Chef
################################################################################
auth:
  deploymentType: Rollout
  replicaCount: 3
  image:
    repository: ghcr.io/cisco-dcloud/idac-auth
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  ports:
  - name: http
    containerPort: 80
    protocol: TCP

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    imagePullSecrets:
      - name: "devhub-docker.cisco.com"
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  
  podAnnotations: 
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
    prometheus.io/scheme: "http"

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  extraEnvs:
    - name: OAUTH_CLIENT
      valueFrom:
        secretKeyRef:
          key: OAUTHCLIENT
          name: idac
    - name: OAUTH_SECRET
      valueFrom:
        secretKeyRef:
          key: OAUTHSECRET
          name: idac
    - name: OAUTHCLIENT_DCLOUD
      valueFrom:
        secretKeyRef:
          key: OAUTHCLIENT_DCLOUD
          name: idac
    - name: OAUTHSECRET_DCLOUD
      valueFrom:
        secretKeyRef:
          key: OAUTHSECRET_DCLOUD
          name: idac
    - name: OAUTH_USERNAME
      valueFrom:
        secretKeyRef:
          key: OAUTH_USERNAME
          name: idac
    - name: OAUTH_PASSWORD
      valueFrom:
        secretKeyRef:
          key: OAUTH_PASSWORD
          name: idac
    - name: OAUTH_REDIRECT_URL
      valueFrom:
        secretKeyRef:
          key: OAUTH_REDIRECT_URL
          name: idac
    - name: OAUTH_KEYS_PATH
      value: /var/sig-keys/private.pem
    - name: MONGODB_URI
      valueFrom:
        secretKeyRef:
          key: MONGODB_URI
          name: idac
    - name: MONGODB_DBNAME
      valueFrom:
        secretKeyRef:
          key: MONGODB_DBNAME
          name: idac
    - name: REDIS_HOST
      valueFrom:
        configMapKeyRef:
          name: idac
          key: REDIS_HOST
    - name: REDIS_PORT
      valueFrom:
        configMapKeyRef:
          name: idac
          key: REDIS_PORT
    - name: ADMIN_ACCESS_GROUP
      value: CN=idac-landing-admins,OU=Cisco Groups,O=cco.cisco.com
    - name: SESSION_COOKIE_NAME
      value: idac-auth-session
    - name: SESSION_SECRET
      valueFrom:
        secretKeyRef:
          key: SESSION_SECRET
          name: idac
    - name: AUTH_PASSTHROUGH
      value: "false"
  podVolumeMounts:
  - name: sig-keys
    mountPath: /var/sig-keys/

  volumes:
  - name: sig-keys
    secret:
      secretName: idac
      items:
      - key: private.pem
        path: private.pem

  service:
    type: NodePort
    port: 80
    name: idac-auth

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-url: "http://idac-auth-stable.idac.svc.cluster.local/oauth/authorize"
      nginx.ingress.kubernetes.io/auth-keepalive: '10'
      nginx.ingress.kubernetes.io/auth-response-headers: authorization
      nginx.ingress.kubernetes.io/proxy-buffer-size: 1024k
      kubernetes.io/ingress.class: "nginx-alb"
    hosts:
      - host: auth.cat-dcloud.com
        paths:
          - path: /
    tls: []
  ingressoauth:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx-alb"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 1024k
      nginx.ingress.kubernetes.io/configuration-snippet: |
        if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
          expires 1d;
          add_header Cache-Control "public";
        }
        if ($request_uri ~* \.(woff2)) {
          expires 12M;
          add_header Cache-Control "public";
        }
    hosts:
      - host: auth.cat-dcloud.com
        paths:
          - path: /oauth/
          - path: /healthcheck
          - path: /ready
          - path: /static/
    tls: []
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #limits:
    #  cpu: 500m
    #  memory: 2Gi
    #requests:
    #  cpu: 500m
    #  memory: 2Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: 
    dedicated: process
  tolerations: []
  affinity: {}
